// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URI")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Models ...

model Item{
  owner String
  tokenId String @unique
  description String @db.VarChar(250)
  images String[]
  video String
  created DateTime @default(now())
  updated DateTime @updatedAt
  publishedAt DateTime?
  published Boolean
  price Float
  openForBid Boolean
  acceptedBid Float
  bids Bid[] 
}

model Bid {
  bidId String @id
  amount Float
  createdDate DateTime @default(now())
  updatedDate DateTime @updatedAt
  bidders User[]
  item Item @relation(fields: [bidId],references: [tokenId])
}

model CollectionType {
  name String @unique
  minOwners Int
  maxOwners Int
  minItems Int
  maxItems Int
  typeId String @unique @default(uuid())
  collection Collection?
}

model User {
  address String @id @unique 
  email String
  password String
  profile Profile? 
  profileId Int?
  bid Bid ? @relation(fields: [bidId], references: [bidId])
  bidId String?
  rating Rating?
  collection Collection?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt 
}

model Collection {
  name String
  typeId String @id @default(uuid())
  type CollectionType? @relation(fields: [collectiontypeId], references: [name])
  collectiontypeId String
  items String[]
  images String[]
  videos String[]
  description String
  owners String
  created DateTime @default(now())
  upated DateTime @updatedAt
  users User? @relation(fields: [userId], references: [address])
  userId String @unique
}

model Rating {
  entityId String @id
  entityType EntityType @default(User)
  user User @relation(fields: [userId], references: [address])
  userId String
}
model Profile {
  name String
  avatar String
  dob String
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [address])
  userId String
  phoneNumber Int
  verified Boolean
  bio String
}

enum Gender {
  MALE
  FEMALE
  NON_BINARY
  OTHERS
}
enum EntityType {
  User
  Single
  Collection
}

//npx prisma studio
//npx prisma push
//npx prisma migrate dev 
